name: Deploy to Web Server

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}   
          password: ${{ secrets.GHCR_TOKEN }}  

      - name: Set up SSH key
        run: |
          # Utwórz folder na klucze SSH
          mkdir -p ~/.ssh
          
          # Sprawdź, czy wartość zmiennej SSH_PRIVATE_KEY jest poprawna
          echo "Checking SSH_PRIVATE_KEY"
          echo "${{ secrets.SSH_PRIVATE_KEY }}"
          
          # Zapisz klucz do pliku id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Debugowanie: sprawdź czy ssh-keyscan dodaje fingerprint
          echo "Running ssh-keyscan"
          ssh-keyscan -H ${{ secrets.WEB01_HOST }} >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts  # Sprawdzenie zawartości known_hosts

          # Testowanie połączenia SSH
          echo "Testing SSH connection"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.WEB_SERVER_USER }}@${{ secrets.WEB01_HOST }} 'echo "Connection successful"'

      - name: Stop running containers on the web server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ secrets.WEB01_HOST }} 'docker-compose -f /home/ec2-user/portfolio-deploy/docker-compose.yml down'

      - name: Pull the Docker image from GHCR on Web Server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ secrets.WEB01_HOST }} 'docker pull ghcr.io/mstefn/portfolio_app:latest'

      - name: Deploy the app on Web Server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ secrets.WEB01_HOST }} 'docker-compose -f /home/ec2-user/portfolio-deploy/docker-compose.yml up -d'
