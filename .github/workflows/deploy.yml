name: Deploy to Web Server

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_SG_NAME: ${{ secrets.AWS_SECURITY_GROUP_NAME }} 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}   
          password: ${{ secrets.GHCR_TOKEN }}  

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/mstefn/portfolio_app:latest .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/mstefn/portfolio_app:latest

      - name: Get EC2 public IP
        id: get_ec2_ip
        run: |
          INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID }}  # Add EC2 instance ID as a secret
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          
          echo "::add-mask::$PUBLIC_IP"  # Mask IP in logs
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-name ${{ env.AWS_SG_NAME }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.get_ec2_ip.outputs.public_ip }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.get_ec2_ip.outputs.public_ip }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.WEB_SERVER_USER }}@${{ steps.get_ec2_ip.outputs.public_ip }} 'echo "SSH connection established"'

      - name: Stop running containers
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ steps.get_ec2_ip.outputs.public_ip }} 'docker-compose -f /home/ec2-user/portfolio-deploy/docker-compose.yml down'

      - name: Pull Docker image
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ steps.get_ec2_ip.outputs.public_ip }} 'docker pull ghcr.io/mstefn/portfolio_app:latest'

      - name: Deploy the app
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.WEB_SERVER_USER }}@${{ steps.get_ec2_ip.outputs.public_ip }} 'docker-compose -f /home/ec2-user/portfolio-deploy/docker-compose.yml up -d'

      - name: Remove GitHub Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-name ${{ env.AWS_SG_NAME }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.get_ec2_ip.outputs.public_ip }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
